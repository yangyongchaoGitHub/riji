通过A20程序发送串口数据 AT

在发送中需要有换行回城才能使蓝牙串口设备接收指令

在发送“AT” 命令时

A20程序源码

send((cmd + " \r").getBytes());

此时发送的串口数据是

0 10000010 1  0 00101010 1  0 00000100 1  0 10110000 1

  
                 0       10000010      1  
               起始位     一字节      停止位 -》表示为 01000001  （需要进行倒序，因先传低字节）
                              
                       表示的是HEX（十六进制）0x41  ASCII码 A
所以发送到串口的数据是“AT \r”

在电脑端的串口助手发送的是
0 10000010 1  0 00101010 1  0 10110000 1  0 01010000 1
“AT\r\n”
都能正常得到芯片返回值“ok”

但是当发送“AT+NAME123”时
a20发送的命令没有成功
电脑端的命令能正常执行
原因在a20程序源码中的" \r" 当修改为"\r\n"后程序正常


当时在解析0 10000010 1  0 00101010 1  0 00000100 1  0 10110000 1 这个命令时，
忽略了起始位和停止位时，解析出的第一位 刚好也是01000001 是正序的41 判断为“A” 而后面的自然解析不出“T”，
之后进行串口数据分析 
发送 a3a3 和 c5c5，
0110001011 0110001011（a3a3） 和
0101000111 0101000111（c5c5）
发现其正序正好是互相倒序的正序正常数，却未想到将之前的AT也倒序查看，因这个正序的01000001
刚好也是“A”。



